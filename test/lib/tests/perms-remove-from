#!/bin/bash

# First arg should be our sudoadmin tool path
sudoadm=$([ "$1" != "" ] && echo "$1" || echo "../../../sudoadmin")

# First arg should be our configuration file path
config=$([ "$2" != "" ] && echo "$2" || echo "../../assets/config")

# Get our name
prog=$(basename $0)

# Get our current working directory
cwd=$(pwd)

# Retrieve the configuration file so we have some data to work with
if [ ! -f ${config} ]; then
  echo "${prog}: Could not locate configuration data for tests, exiting"
  exit 1
fi

source ${config}

# Check for 'sudoadmin'
if [ ! -f "${sudoadm}" ]; then
  sudoadm=$(find / -type f -name sudoadmin|sort -u|head -1)
fi

# Check for 'sudoers'
if [ ! -f "${file}" ]; then
  file=$(find $(dirname ${config}) -type f -name sudoers|sort -u|head -1)
fi

# Ensure ${permissions[@]} is > 0
if [ ${#permissions[@]} -gt 0 ]; then

  # Begin iteration of ${permissions[@]}
  for data in ${!permissions[@]}; do

    # Reset ${items}, ${item} & ${random) to empty
    items=
    item=
    random=

    # Make a temporary copy of ${file}
    name="${tmp_dir}$(basename ${file}).${data}.$RANDOM"
    cp ${file} ${name}

    # Add an alias so we can remove it
    bogus=$(${sudoadm} -Vf ${name} -aP ${data} "${permissions[${data}]}")
    if [ $? -ne 0 ]; then
      echo "${bogus}"
      echo "Failed addition of new '${data}' Permissions" && exit 1
    fi

    # Create a needle to search for
    needle="^${data}.*"

    # Use ${needle} to create ${haystack} from ${name}
    haystack=$(grep "${needle}" ${name})
    if [ "${haystack}" == "" ]; then
      echo "${bogus}"
      echo "${needle}"
      echo "${haystack}"
      echo "Failed validation of new '${data}' Permissions" && exit 1
    fi

    # Sleep for .1 seconds to accomodate for race conditions
    sleep 1

    # Re-assign ${permissions[${data}]} to ${tmp}
    tmp="${permissions[${data}]}"

    # Split ${tmp} apart to get objects
    if [[ "${tmp}" =~ : ]]; then
      tmp=$(echo "${tmp}"|tr ' ' '@'|awk 'match($0, /.*:(.*)$/, perms){print perms[1]}'|tr '@' ' ')
    else
      tmp=$(echo "${tmp}"|tr ' ' '@'|awk 'match($0, /\(.*\)(.*)$/, perms){print perms[1]}'|tr '@' ' ')
    fi

    # Generate an array from ${tmp}
    IFS=',' read -a items <<< "$(echo "${tmp}")"

    # Generate a random number for this iteration
    while [[ ${random} == "" ]] || [[ ${random} -gt ${#items[@]} ]]; do
      random=$(( $RANDOM % ${#items[@]} ))
      if [[ ${random} -lt ${#items[@]} ]] && [[ ${random} -gt -1 ]]; then

        # Randomly pick an element from ${user_aliases[${data}]} to remove
        item=$(echo "${items[${random}]}")
        if [ "${item}" != "" ]; then
          break
        fi
      fi
    done

    # Now remove the alias ${data}
    bogus=$(${sudoadm} -Vf ${name} -rP ${data} "${item}")
    if [ $? -ne 0 ]; then
      echo "Failed removal of new '${item}' from the '${data}' Permissions" && exit 1
    fi

    # Use ${item} to create ${haystack} from ${name}
    haystack=$(grep "${needle}" ${name}|grep "${item}")
    if [ "${haystack}" != "" ]; then
      echo "${bogus}"
      echo "${needle}"
      echo "${haystack}"
      echo "Failed validation for remvoval of '${item}' from the '${data}' Permissions" && exit 1
    fi

    # Clean up our working file(s)
    rm -f ${name}*
  done
fi

echo "Passed"