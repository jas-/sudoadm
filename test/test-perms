#!/bin/bash

perms=("USER1 SERVER1 = (ALL) NOPASSWD:/sbin/mount,/bin/w"
"USER2 localhost=PASSWD:/sbin/mount,/bin/w"
"GROUP1 SERVERS1=(abc:def)EXEC:/sbin/mount,/bin/w"
"GROUP2 SERVERS2=(ALL)NOEXEC:/sbin/mount,/bin/w"
"USER3 SERVER3=(GROUP1)NOSETENV:/sbin/mount,/bin/w"
"GROUP3 SERVER3=(GROUP1) NOSETENV:/sbin/mount,/bin/w"
"+daemon localhost=(ALL)LOG_INPUT:/sbin/mount,/bin/w"
"%cdrom localhost=(ALL)NOLOG_INPUT:/sbin/mount,/bin/w"
"+USER4 SERVER1=(USER1:GROUP2)LOG_OUTPUT:/sbin/mount,/bin/w"
"jack localhost=(ALL)NOLOG_OUTPUT:/sbin/mount,/bin/w"
"ABC ALL=(ALL)ABCMDS,/sbin/mount,/bin/w")

declare -A perms1
perms1[USER1]="SERVER1 = (ALL) NOPASSWD:/sbin/mount,/bin/w"
perms1[USER1]="ALL = /bin/wtf -abc"
perms1[USER2]="localhost = PASSWD:/sbin/mount,/bin/w"
perms1[GROUP1]="SERVERS1 = (abc:def)EXEC:/sbin/mount,/bin/w"
perms1[GROUP2]="SERVERS2=(ALL)NOEXEC:/sbin/mount,/bin/w"
perms1[USER3]="SERVER3=(GROUP1) NOSETENV:/sbin/mount,/bin/w"
perms1[GROUP3]="ALL = (ALL)SETENV:/sbin/mount,/bin/w,/sbin/abc -v"
perms1[+daemon]="localhost=(ALL)LOG_INPUT:/sbin/mount,/bin/w"
perms1[%cdrom]="localhost=(ALL)NOLOG_INPUT:/sbin/mount,/bin/w"
perms1[+USER4]="SERVER1=(USER1:GROUP2)LOG_OUTPUT:/sbin/mount,/bin/w"
perms1[jack]="localhost=(ALL)NOLOG_OUTPUT:/sbin/mount,/bin/w"
perms1[ABC]="SERVER1=ABCMDS,/sbin/mount,/bin/w"
perms1[XYZ]="ALL=ABCMDS,/sbin/mount,/bin/w"

# Parse the permission stanza
#  1 - The haystack
parse_perms() {
  local haystack="${1}"

  echo "${haystack}"|awk '{
    stanza="perm=" $1;

    # Initial match
    match($2, /^(\w+)=(\(.*\))?(N?O?PASSWD|N?O?EXEC|N?O?SETENV|N?O?LOG_INPUT|N?O?LOG_OUTPUT)?:?(.*)$/, obj);

    # If server is missing try again
    if (!obj[1]) {
      total=split($2, tmp, "=");
      if (tmp[1])
        obj[1]=tmp[1];
    }

    # If ug is missing try again
    if (!obj[2]) {
      match($0, /^.*(\(.*\)).*$/, tmp);
      if (tmp[1]) {
        obj[2]=tmp[1];
      }
    }

    # If tag is missing try again
    if (!obj[3]) {
      match($0, /^.*(N?O?PASSWD|N?O?EXEC|N?O?SETENV|N?O?LOG_INPUT|N?O?LOG_OUTPUT).*$/, tmp);
      if (tmp[1]) {
        obj[3]=tmp[1];
      }
    }

    # If cmds is missing try again
    if (!obj[4]) {

      # Try to split @ : for a list of cmds
      if ($0 ~ /:/) {
        total=split($0, tmp, ":");
        if (tmp[total])
          obj[4]=tmp[total];
      }

      # If still no cmds try splitting @ =
      if ($0 ~ /=/ && !obj[4]) {
        total=split($0, tmp, "=");
        if (tmp[total])
          obj[4]=tmp[total];
      }
    }

    # Fix for only permissions as arg
    if (!obj[4] && obj[1]) {
      obj[4]=obj[1];
      obj[1]="";
    }

    server="server=" obj[1];
    ug="ug=" obj[2];
    tag="tag=" obj[3];
    cmds="cmds=" obj[4];

    print stanza " " server " " ug " " tag " " cmds

  }'|sed -e '/= /d'
  # awk '{ gsub(/^[ \t]+|[ \t]+$/, ""); print }'
}

for item in "${perms[@]}"; do
  echo "Parsing: ${item}..."
  parse_perms "${item}"
  echo -ne "Testing validity..."
  echo "${item}" > /var/tmp/test-sudoer
  bogus=$(visudo -c -q -f /var/tmp/test-sudoer 2>/dev/null)
  if [ $? -ne 0 ]; then
    echo "Error"
  else
    echo "Ok"
  fi
  rm /var/tmp/test-sudoer
  echo ""
done

for item in "${!perms1[@]}"; do
  echo "Parsing: ${item} ${perms1[${item}]}..."
  parse_perms "${item} ${perms1[${item}]}"
  echo -ne "Testing validity..."
  echo "${item} ${perms1[${item}]}" > /var/tmp/test-sudoer
  bogus=$(visudo -c -q -f /var/tmp/test-sudoer 2>/dev/null)
  if [ $? -ne 0 ]; then
    echo "Error"
  else
    echo "Ok"
  fi
  rm /var/tmp/test-sudoer
  echo ""
done

